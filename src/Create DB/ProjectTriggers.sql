CREATE OR REPLACE TRIGGER ON_GET_SERV_UPDATE
after INSERT
ON GETTING_SERVICE
FOR EACH ROW
DECLARE

rand NUMBER(15);

BEGIN


rand := dbms_random.value(100001,99999999999999);
INSERT INTO VERIFICATION VALUES(:NEW.CLIENT_ID,:NEW.COMPANY_ID,rand);

IF :NEW.SERVICE_ID = 
END;
/
SET SERVEROUTPUT ON;
SHOW ERRORS;
----------------------------------------------------------
----------------------------------------------------------

CREATE OR REPLACE TRIGGER CHECK_READING
AFTER INSERT ON ELEC_USAGE
FOR EACH ROW

DECLARE


BEGIN

IF :NEW.PRESENT_RDG IS NOT NULL THEN 
    IF(:NEW.PREVIOUS_RDG > :NEW.PRESENT_RDG OR :NEW.PREVIOUS_DATE > :NEW.PRESENT_DATE ) THEN 
        DELETE FROM BILL
        WHERE GS_ID = :NEW.GS_ID AND BILL_MONTH = :NEW.BILL_MONTH AND BILL_YEAR = :NEW.BILL_YEAR;
        
        DELETE FROM ELEC_USAGE
        WHERE GS_ID = :NEW.GS_ID AND BILL_MONTH = :NEW.BILL_MONTH AND BILL_YEAR = :NEW.BILL_YEAR;
    END IF;
END IF;

END;
/
----------------------------------------------------------
----------------------------------------------------------
CREATE OR REPLACE TRIGGER ELEC_BILL_CREATION
AFTER INSERT ON ELEC_USAGE
FOR EACH ROW 
DECLARE
BR_ID NUMBER;
BILL_NO NUMBER;
CONSUMER_NO NUMBER;
COM_ID NUMBER;
SERV_ID NUMBER;
BILL_MONTH VARCHAR2(3);
ISSUE_DATE DATE;
--DUE_DATE DATE;
USED NUMBER;
COSTS NUMBER;
VATS NUMBER;
TOTAL NUMBER;
STATUS_ID NUMBER;
PAYMENT_DATE DATE;

BEGIN
   SERV_ID := :NEW.SERVICE_ID;
   CONSUMER_NO := :NEW.CONSUMER_ID;
   USED := :NEW.USED;
   ISSUE_DATE := SYSDATE;
   PAYMENT_DATE := NULL;
   SELECT COMPANY_ID INTO COM_ID FROM GETTING_SERVICE WHERE GS_ID = :NEW.GS_ID AND SERVICE_ID = SERV_ID;
   DBMS_OUTPUT.PUT_LINE(COM_ID);
   SELECT BILL_RULE_ID INTO BR_ID FROM BILL_RULE WHERE COMPANY_ID = COM_ID AND SERVICE_ID = SERV_ID AND END_DATE IS NULL;
   DBMS_OUTPUT.PUT_LINE(COM_ID);
   SELECT (NVL(MAX(BILL_NO),0)+1) INTO BILL_NO FROM BILL;
   COSTS:= BILL_CALC(BR_ID,USED);
   VATS := COSTS*5/100;
   TOTAL := COSTS + VATS;
   
   INSERT INTO BILL VALUES(BILL_NO, CONSUMER_NO, COM_ID, SERV_ID,:NEW.BILL_MONTH,ISSUE_DATE,ISSUE_DATE+7,USED,COSTS,VATS,TOTAL,15,PAYMENT_DATE,:NEW.BILL_YEAR,0,:NEW.GS_ID);
   
END;
/
-------------------------------------------------------
SHOW ERRORS;

-------------------------------------------------------

 
-------------------------------------------------------

CREATE OR REPLACE TRIGGER SET_PREVIOUS_RDG
BEFORE INSERT ON ELEC_USAGE
FOR EACH ROW

DECLARE
PREV_MONTH_PRESENT_DATE DATE;
PREV_MONTH_RDG NUMBER(15);
PREV_MONTH NUMBER(3);
Y NUMBER(4);
COUNTS NUMBER(1);
BEGIN

COUNTS := 0;
:NEW.BILL_MONTH := TO_CHAR(ADD_MONTHS(:NEW.PRESENT_DATE,-1),'MM');
:NEW.BILL_YEAR := TO_CHAR(ADD_MONTHS(:NEW.PRESENT_DATE,-1),'YYYY');

PREV_MONTH := TO_CHAR(ADD_MONTHS(:NEW.PRESENT_DATE,-2),'MM');
Y := TO_CHAR(ADD_MONTHS(:NEW.PRESENT_DATE,-2),'YYYY');

SELECT COUNT(*) INTO COUNTS FROM ELEC_USAGE WHERE GS_ID = :NEW.GS_ID AND SERVICE_ID = :NEW.SERVICE_ID AND BILL_MONTH = PREV_MONTH AND BILL_YEAR = Y;

IF COUNTS = 0 THEN
    PREV_MONTH_RDG := 0;
    PREV_MONTH_PRESENT_DATE := ADD_MONTHS(:NEW.PRESENT_DATE,-1);
ELSE
    SELECT PRESENT_RDG INTO PREV_MONTH_RDG FROM ELEC_USAGE WHERE GS_ID = :NEW.GS_ID AND SERVICE_ID = :NEW.SERVICE_ID AND BILL_MONTH = PREV_MONTH AND BILL_YEAR = Y;
    SELECT PRESENT_DATE INTO PREV_MONTH_PRESENT_DATE FROM ELEC_USAGE WHERE GS_ID = :NEW.GS_ID AND SERVICE_ID = :NEW.SERVICE_ID AND BILL_MONTH = PREV_MONTH AND BILL_YEAR = Y;
END IF;

IF :NEW.PREVIOUS_RDG IS NULL THEN
    :NEW.PREVIOUS_RDG := PREV_MONTH_RDG;
END IF;

:NEW.PREVIOUS_DATE := PREV_MONTH_PRESENT_DATE;
:NEW.USED := :NEW.PRESENT_RDG - :NEW.PREVIOUS_RDG;

END;
/
-------------------------------------------------------
-------------------------------------------------------

-------------------------------------------------------
-------------------------------------------------------
CREATE OR REPLACE TRIGGER ON_UPDATE_BILL_RULE
BEFORE INSERT ON BILL_RULE
FOR EACH ROW
DECLARE 
BILL_NO NUMBER;
COUNTS NUMBER;
BEGIN 
COUNTS := 0;
SELECT COUNT(*) INTO COUNTS FROM BILL_RULE WHERE COMPANY_ID = :NEW.COMPANY_ID AND SERVICE_ID = :NEW.SERVICE_ID AND END_DATE IS NULL;
IF(COUNTS > 0) THEN 
    UPDATE  BILL_RULE
    SET END_DATE = SYSDATE
    WHERE COMPANY_ID = :NEW.COMPANY_ID AND SERVICE_ID = :NEW.SERVICE_ID AND END_DATE IS NULL;
END IF;
END;
/
-------------------------------------------------------
-------------------------------------------------------


----------------------------

SET SERVEROUTPUT ON;

